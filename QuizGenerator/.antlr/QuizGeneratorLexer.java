// Generated from /home/tabuas/Desktop/uni/lfa/Projeto2020/lfa1920-g01/QuizGenerator/QuizGenerator.g4 by ANTLR 4.7.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class QuizGeneratorLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, NUM=47, ID=48, WORD=49, WS=50, COMMENT=51;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "NUM", "ID", "WORD", "WS", 
		"COMMENT"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'Begin'", "'create'", "'endcreate'", "';'", "'for'", "'in'", "':'", 
		"'endfor'", "'if'", "'('", "'=='", "'.correctAnswer()'", "')'", "'endif'", 
		"'else'", "'Question'", "'.text'", "'='", "'.theme'", "'.difficulty'", 
		"'.answer'", "','", "'[]'", "'['", "']'", "'String'", "'int'", "'double'", 
		"'DB'", "'load'", "'.get'", "'answersMode'", "'.add'", "'rand'", "'.numAnswers'", 
		"'print'", "'*'", "'/'", "'+'", "'-'", "'.answers()'", "'multipleChoice'", 
		"'trueOrFalse'", "'easy'", "'medium'", "'hard'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, "NUM", 
		"ID", "WORD", "WS", "COMMENT"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public QuizGeneratorLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "QuizGenerator.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\65\u01a5\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4"+
		"\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\b\3"+
		"\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\f\3\r\3"+
		"\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3"+
		"\16\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3"+
		"\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3"+
		"\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3"+
		"\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3"+
		"\27\3\27\3\30\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3"+
		"\33\3\33\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3"+
		"\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!"+
		"\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3"+
		"$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3*"+
		"\3*\3*\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+"+
		"\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3."+
		"\3.\3/\3/\3/\3/\3/\3\60\6\60\u0175\n\60\r\60\16\60\u0176\3\60\3\60\7\60"+
		"\u017b\n\60\f\60\16\60\u017e\13\60\5\60\u0180\n\60\3\61\3\61\7\61\u0184"+
		"\n\61\f\61\16\61\u0187\13\61\3\62\3\62\7\62\u018b\n\62\f\62\16\62\u018e"+
		"\13\62\3\62\3\62\3\63\6\63\u0193\n\63\r\63\16\63\u0194\3\63\3\63\3\64"+
		"\3\64\3\64\3\64\7\64\u019d\n\64\f\64\16\64\u01a0\13\64\3\64\3\64\3\64"+
		"\3\64\3\u019e\2\65\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r"+
		"\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33"+
		"\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63"+
		"e\64g\65\3\2\7\3\2\62;\4\2C\\c|\6\2\62;C\\aac|\3\2$$\5\2\13\f\17\17\""+
		"\"\2\u01ab\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2"+
		"\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27"+
		"\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2"+
		"\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2"+
		"\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2"+
		"\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2"+
		"\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S"+
		"\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2"+
		"\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\3i\3\2\2\2\5o\3\2\2\2"+
		"\7v\3\2\2\2\t\u0080\3\2\2\2\13\u0082\3\2\2\2\r\u0086\3\2\2\2\17\u0089"+
		"\3\2\2\2\21\u008b\3\2\2\2\23\u0092\3\2\2\2\25\u0095\3\2\2\2\27\u0097\3"+
		"\2\2\2\31\u009a\3\2\2\2\33\u00ab\3\2\2\2\35\u00ad\3\2\2\2\37\u00b3\3\2"+
		"\2\2!\u00b8\3\2\2\2#\u00c1\3\2\2\2%\u00c7\3\2\2\2\'\u00c9\3\2\2\2)\u00d0"+
		"\3\2\2\2+\u00dc\3\2\2\2-\u00e4\3\2\2\2/\u00e6\3\2\2\2\61\u00e9\3\2\2\2"+
		"\63\u00eb\3\2\2\2\65\u00ed\3\2\2\2\67\u00f4\3\2\2\29\u00f8\3\2\2\2;\u00ff"+
		"\3\2\2\2=\u0102\3\2\2\2?\u0107\3\2\2\2A\u010c\3\2\2\2C\u0118\3\2\2\2E"+
		"\u011d\3\2\2\2G\u0122\3\2\2\2I\u012e\3\2\2\2K\u0134\3\2\2\2M\u0136\3\2"+
		"\2\2O\u0138\3\2\2\2Q\u013a\3\2\2\2S\u013c\3\2\2\2U\u0147\3\2\2\2W\u0156"+
		"\3\2\2\2Y\u0162\3\2\2\2[\u0167\3\2\2\2]\u016e\3\2\2\2_\u0174\3\2\2\2a"+
		"\u0181\3\2\2\2c\u0188\3\2\2\2e\u0192\3\2\2\2g\u0198\3\2\2\2ij\7D\2\2j"+
		"k\7g\2\2kl\7i\2\2lm\7k\2\2mn\7p\2\2n\4\3\2\2\2op\7e\2\2pq\7t\2\2qr\7g"+
		"\2\2rs\7c\2\2st\7v\2\2tu\7g\2\2u\6\3\2\2\2vw\7g\2\2wx\7p\2\2xy\7f\2\2"+
		"yz\7e\2\2z{\7t\2\2{|\7g\2\2|}\7c\2\2}~\7v\2\2~\177\7g\2\2\177\b\3\2\2"+
		"\2\u0080\u0081\7=\2\2\u0081\n\3\2\2\2\u0082\u0083\7h\2\2\u0083\u0084\7"+
		"q\2\2\u0084\u0085\7t\2\2\u0085\f\3\2\2\2\u0086\u0087\7k\2\2\u0087\u0088"+
		"\7p\2\2\u0088\16\3\2\2\2\u0089\u008a\7<\2\2\u008a\20\3\2\2\2\u008b\u008c"+
		"\7g\2\2\u008c\u008d\7p\2\2\u008d\u008e\7f\2\2\u008e\u008f\7h\2\2\u008f"+
		"\u0090\7q\2\2\u0090\u0091\7t\2\2\u0091\22\3\2\2\2\u0092\u0093\7k\2\2\u0093"+
		"\u0094\7h\2\2\u0094\24\3\2\2\2\u0095\u0096\7*\2\2\u0096\26\3\2\2\2\u0097"+
		"\u0098\7?\2\2\u0098\u0099\7?\2\2\u0099\30\3\2\2\2\u009a\u009b\7\60\2\2"+
		"\u009b\u009c\7e\2\2\u009c\u009d\7q\2\2\u009d\u009e\7t\2\2\u009e\u009f"+
		"\7t\2\2\u009f\u00a0\7g\2\2\u00a0\u00a1\7e\2\2\u00a1\u00a2\7v\2\2\u00a2"+
		"\u00a3\7C\2\2\u00a3\u00a4\7p\2\2\u00a4\u00a5\7u\2\2\u00a5\u00a6\7y\2\2"+
		"\u00a6\u00a7\7g\2\2\u00a7\u00a8\7t\2\2\u00a8\u00a9\7*\2\2\u00a9\u00aa"+
		"\7+\2\2\u00aa\32\3\2\2\2\u00ab\u00ac\7+\2\2\u00ac\34\3\2\2\2\u00ad\u00ae"+
		"\7g\2\2\u00ae\u00af\7p\2\2\u00af\u00b0\7f\2\2\u00b0\u00b1\7k\2\2\u00b1"+
		"\u00b2\7h\2\2\u00b2\36\3\2\2\2\u00b3\u00b4\7g\2\2\u00b4\u00b5\7n\2\2\u00b5"+
		"\u00b6\7u\2\2\u00b6\u00b7\7g\2\2\u00b7 \3\2\2\2\u00b8\u00b9\7S\2\2\u00b9"+
		"\u00ba\7w\2\2\u00ba\u00bb\7g\2\2\u00bb\u00bc\7u\2\2\u00bc\u00bd\7v\2\2"+
		"\u00bd\u00be\7k\2\2\u00be\u00bf\7q\2\2\u00bf\u00c0\7p\2\2\u00c0\"\3\2"+
		"\2\2\u00c1\u00c2\7\60\2\2\u00c2\u00c3\7v\2\2\u00c3\u00c4\7g\2\2\u00c4"+
		"\u00c5\7z\2\2\u00c5\u00c6\7v\2\2\u00c6$\3\2\2\2\u00c7\u00c8\7?\2\2\u00c8"+
		"&\3\2\2\2\u00c9\u00ca\7\60\2\2\u00ca\u00cb\7v\2\2\u00cb\u00cc\7j\2\2\u00cc"+
		"\u00cd\7g\2\2\u00cd\u00ce\7o\2\2\u00ce\u00cf\7g\2\2\u00cf(\3\2\2\2\u00d0"+
		"\u00d1\7\60\2\2\u00d1\u00d2\7f\2\2\u00d2\u00d3\7k\2\2\u00d3\u00d4\7h\2"+
		"\2\u00d4\u00d5\7h\2\2\u00d5\u00d6\7k\2\2\u00d6\u00d7\7e\2\2\u00d7\u00d8"+
		"\7w\2\2\u00d8\u00d9\7n\2\2\u00d9\u00da\7v\2\2\u00da\u00db\7{\2\2\u00db"+
		"*\3\2\2\2\u00dc\u00dd\7\60\2\2\u00dd\u00de\7c\2\2\u00de\u00df\7p\2\2\u00df"+
		"\u00e0\7u\2\2\u00e0\u00e1\7y\2\2\u00e1\u00e2\7g\2\2\u00e2\u00e3\7t\2\2"+
		"\u00e3,\3\2\2\2\u00e4\u00e5\7.\2\2\u00e5.\3\2\2\2\u00e6\u00e7\7]\2\2\u00e7"+
		"\u00e8\7_\2\2\u00e8\60\3\2\2\2\u00e9\u00ea\7]\2\2\u00ea\62\3\2\2\2\u00eb"+
		"\u00ec\7_\2\2\u00ec\64\3\2\2\2\u00ed\u00ee\7U\2\2\u00ee\u00ef\7v\2\2\u00ef"+
		"\u00f0\7t\2\2\u00f0\u00f1\7k\2\2\u00f1\u00f2\7p\2\2\u00f2\u00f3\7i\2\2"+
		"\u00f3\66\3\2\2\2\u00f4\u00f5\7k\2\2\u00f5\u00f6\7p\2\2\u00f6\u00f7\7"+
		"v\2\2\u00f78\3\2\2\2\u00f8\u00f9\7f\2\2\u00f9\u00fa\7q\2\2\u00fa\u00fb"+
		"\7w\2\2\u00fb\u00fc\7d\2\2\u00fc\u00fd\7n\2\2\u00fd\u00fe\7g\2\2\u00fe"+
		":\3\2\2\2\u00ff\u0100\7F\2\2\u0100\u0101\7D\2\2\u0101<\3\2\2\2\u0102\u0103"+
		"\7n\2\2\u0103\u0104\7q\2\2\u0104\u0105\7c\2\2\u0105\u0106\7f\2\2\u0106"+
		">\3\2\2\2\u0107\u0108\7\60\2\2\u0108\u0109\7i\2\2\u0109\u010a\7g\2\2\u010a"+
		"\u010b\7v\2\2\u010b@\3\2\2\2\u010c\u010d\7c\2\2\u010d\u010e\7p\2\2\u010e"+
		"\u010f\7u\2\2\u010f\u0110\7y\2\2\u0110\u0111\7g\2\2\u0111\u0112\7t\2\2"+
		"\u0112\u0113\7u\2\2\u0113\u0114\7O\2\2\u0114\u0115\7q\2\2\u0115\u0116"+
		"\7f\2\2\u0116\u0117\7g\2\2\u0117B\3\2\2\2\u0118\u0119\7\60\2\2\u0119\u011a"+
		"\7c\2\2\u011a\u011b\7f\2\2\u011b\u011c\7f\2\2\u011cD\3\2\2\2\u011d\u011e"+
		"\7t\2\2\u011e\u011f\7c\2\2\u011f\u0120\7p\2\2\u0120\u0121\7f\2\2\u0121"+
		"F\3\2\2\2\u0122\u0123\7\60\2\2\u0123\u0124\7p\2\2\u0124\u0125\7w\2\2\u0125"+
		"\u0126\7o\2\2\u0126\u0127\7C\2\2\u0127\u0128\7p\2\2\u0128\u0129\7u\2\2"+
		"\u0129\u012a\7y\2\2\u012a\u012b\7g\2\2\u012b\u012c\7t\2\2\u012c\u012d"+
		"\7u\2\2\u012dH\3\2\2\2\u012e\u012f\7r\2\2\u012f\u0130\7t\2\2\u0130\u0131"+
		"\7k\2\2\u0131\u0132\7p\2\2\u0132\u0133\7v\2\2\u0133J\3\2\2\2\u0134\u0135"+
		"\7,\2\2\u0135L\3\2\2\2\u0136\u0137\7\61\2\2\u0137N\3\2\2\2\u0138\u0139"+
		"\7-\2\2\u0139P\3\2\2\2\u013a\u013b\7/\2\2\u013bR\3\2\2\2\u013c\u013d\7"+
		"\60\2\2\u013d\u013e\7c\2\2\u013e\u013f\7p\2\2\u013f\u0140\7u\2\2\u0140"+
		"\u0141\7y\2\2\u0141\u0142\7g\2\2\u0142\u0143\7t\2\2\u0143\u0144\7u\2\2"+
		"\u0144\u0145\7*\2\2\u0145\u0146\7+\2\2\u0146T\3\2\2\2\u0147\u0148\7o\2"+
		"\2\u0148\u0149\7w\2\2\u0149\u014a\7n\2\2\u014a\u014b\7v\2\2\u014b\u014c"+
		"\7k\2\2\u014c\u014d\7r\2\2\u014d\u014e\7n\2\2\u014e\u014f\7g\2\2\u014f"+
		"\u0150\7E\2\2\u0150\u0151\7j\2\2\u0151\u0152\7q\2\2\u0152\u0153\7k\2\2"+
		"\u0153\u0154\7e\2\2\u0154\u0155\7g\2\2\u0155V\3\2\2\2\u0156\u0157\7v\2"+
		"\2\u0157\u0158\7t\2\2\u0158\u0159\7w\2\2\u0159\u015a\7g\2\2\u015a\u015b"+
		"\7Q\2\2\u015b\u015c\7t\2\2\u015c\u015d\7H\2\2\u015d\u015e\7c\2\2\u015e"+
		"\u015f\7n\2\2\u015f\u0160\7u\2\2\u0160\u0161\7g\2\2\u0161X\3\2\2\2\u0162"+
		"\u0163\7g\2\2\u0163\u0164\7c\2\2\u0164\u0165\7u\2\2\u0165\u0166\7{\2\2"+
		"\u0166Z\3\2\2\2\u0167\u0168\7o\2\2\u0168\u0169\7g\2\2\u0169\u016a\7f\2"+
		"\2\u016a\u016b\7k\2\2\u016b\u016c\7w\2\2\u016c\u016d\7o\2\2\u016d\\\3"+
		"\2\2\2\u016e\u016f\7j\2\2\u016f\u0170\7c\2\2\u0170\u0171\7t\2\2\u0171"+
		"\u0172\7f\2\2\u0172^\3\2\2\2\u0173\u0175\t\2\2\2\u0174\u0173\3\2\2\2\u0175"+
		"\u0176\3\2\2\2\u0176\u0174\3\2\2\2\u0176\u0177\3\2\2\2\u0177\u017f\3\2"+
		"\2\2\u0178\u017c\7\60\2\2\u0179\u017b\t\2\2\2\u017a\u0179\3\2\2\2\u017b"+
		"\u017e\3\2\2\2\u017c\u017a\3\2\2\2\u017c\u017d\3\2\2\2\u017d\u0180\3\2"+
		"\2\2\u017e\u017c\3\2\2\2\u017f\u0178\3\2\2\2\u017f\u0180\3\2\2\2\u0180"+
		"`\3\2\2\2\u0181\u0185\t\3\2\2\u0182\u0184\t\4\2\2\u0183\u0182\3\2\2\2"+
		"\u0184\u0187\3\2\2\2\u0185\u0183\3\2\2\2\u0185\u0186\3\2\2\2\u0186b\3"+
		"\2\2\2\u0187\u0185\3\2\2\2\u0188\u018c\7$\2\2\u0189\u018b\n\5\2\2\u018a"+
		"\u0189\3\2\2\2\u018b\u018e\3\2\2\2\u018c\u018a\3\2\2\2\u018c\u018d\3\2"+
		"\2\2\u018d\u018f\3\2\2\2\u018e\u018c\3\2\2\2\u018f\u0190\7$\2\2\u0190"+
		"d\3\2\2\2\u0191\u0193\t\6\2\2\u0192\u0191\3\2\2\2\u0193\u0194\3\2\2\2"+
		"\u0194\u0192\3\2\2\2\u0194\u0195\3\2\2\2\u0195\u0196\3\2\2\2\u0196\u0197"+
		"\b\63\2\2\u0197f\3\2\2\2\u0198\u0199\7\61\2\2\u0199\u019a\7\61\2\2\u019a"+
		"\u019e\3\2\2\2\u019b\u019d\13\2\2\2\u019c\u019b\3\2\2\2\u019d\u01a0\3"+
		"\2\2\2\u019e\u019f\3\2\2\2\u019e\u019c\3\2\2\2\u019f\u01a1\3\2\2\2\u01a0"+
		"\u019e\3\2\2\2\u01a1\u01a2\7\f\2\2\u01a2\u01a3\3\2\2\2\u01a3\u01a4\b\64"+
		"\2\2\u01a4h\3\2\2\2\n\2\u0176\u017c\u017f\u0185\u018c\u0194\u019e\3\b"+
		"\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}